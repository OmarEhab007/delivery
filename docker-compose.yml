services:
  app:
    build: .
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/delivery-app
      - PORT=3000
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_EXPIRES_IN=1d
      - JWT_COOKIE_EXPIRES_IN=1
      - COOKIE_SECRET=your_cookie_secret_key_here
      - USE_MONGODB_TRANSACTIONS=false
      - ADMIN_NAME=Admin User
      - ADMIN_EMAIL=admin@deliveryapp.com
      - ADMIN_PASSWORD=admin123456
      - ADMIN_PHONE=1234567890
    restart: on-failure
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      # Using simplified initialization script
      - ./docker/mongo-init-simple.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    # Standard MongoDB without replica set
    environment:
      - MONGO_INITDB_DATABASE=delivery-app
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/delivery-app --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: always
    networks:
      - app-network
      
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: always
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  prometheus_data:
  grafana_data:
